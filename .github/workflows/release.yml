name: Release
on:
  workflow_dispatch:
    inputs:
      newVersion:
        description: 'New version (optional, defaults to next minor version)'
        required: false

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Initialize mandatory git config
        run: |
          git config user.name "AppOutlet team"
          git config user.email team.appoutlet@gmail.com
      - name: Give execution permission to semver
        run: chmod +x script/semver
      - name: Give execution permission to the script
        run: chmod +x script/bump-version.sh
      - name: Bump application version
        run: script/bump-version.sh ${{ github.event.inputs.newVersion }}
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  linux:
    name: Linux release
    runs-on: ubuntu-latest
    needs: bump
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: packageReleaseDistributionForCurrentOS
          cache-read-only: false

      - name: Set version variable
        run: |
          VER=v$(cat .version)
          echo "VERSION=$VER" >> $GITHUB_ENV

      - name: Deploy to releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/compose/binaries/main-release/deb/game-outlet_*.deb
            build/compose/binaries/main-release/rpm/game-outlet-*.rpm
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          fail_on_unmatched_files: true

  windows:
    name: Windows release
    runs-on: windows-latest
    needs: bump
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: packageReleaseDistributionForCurrentOS
          cache-read-only: false

      - name: Set version variable
        run: |
          VER=v$(cat .version)
          echo "VERSION=$VER" >> $GITHUB_ENV

      - name: Deploy to releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/compose/binaries/main-release/exe/GameOutlet-*.exe
            build/compose/binaries/main-release/msi/GameOutlet-*.msi
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          fail_on_unmatched_files: true

  macos:
    name: MacOS release
    runs-on: macos-latest
    needs: bump
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: packageReleaseDistributionForCurrentOS
          cache-read-only: false

      - name: Set version variable
        run: |
          VER=v$(cat .version)
          echo "VERSION=$VER" >> $GITHUB_ENV

      - name: Deploy to releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/compose/binaries/main-release/dmg/GameOutlet-*.dmg
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          fail_on_unmatched_files: true
